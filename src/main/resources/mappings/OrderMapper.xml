<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.merrill.dao.mapper.OrderMapper">
    <cache type="org.mybatis.caches.ehcache.EhcacheCache">
        <property name="timeToIdleSeconds" value="3600"/>
        <property name="timeToLiveSeconds" value="3600"/>
        <property name="maxEntriesLocalHeap" value="1000"/>
        <property name="maxEntriesLocalDisk" value="10000000"/>
        <property name="memoryStoreEvictionPolicy" value="LRU"/>
    </cache>

    <resultMap id="Order" type="com.merrill.dao.entity.Order">
        <id column="id" property="id"/>
        <result column="location" property="location"/>
        <result column="phone" property="phone"/>
        <result column="begin_time" property="beginTime"/>
        <result column="reservation_time" property="reservationTime"/>
        <result column="handle_time" property="handleTime"/>
        <result column="end_time" property="endTime"/>
        <result column="description" property="description"/>
        <result column="user_description" property="userDescription"/>
        <result column="repairment" property="repairment"/>
        <result column="status" property="status"/>
        <association property="user" javaType="com.merrill.dao.entity.User">
            <id column="u_id" property="id"/>
            <result column="u_open_id" property="openID"/>
            <result column="u_name" property="name"/>
            <result column="u_phone" property="phone"/>
        </association>
        <association property="operator" javaType="com.merrill.dao.entity.Operator">
            <id column="op_id" property="id"/>
            <result column="op_open_id" property="openID"/>
            <result column="op_name" property="name"/>
            <result column="op_phone" property="phone"/>
        </association>
    </resultMap>

    <sql id="orderSelectBase">
        SELECT o.id,
               o.location,
               o.phone,
               o.begin_time,
               o.reservation_time,
               o.handle_time,
               o.description,
               o.user_description,
               o.repairment,
               o.status,
               u.id       AS u_id,
               u.open_id  AS u_open_id,
               u.name     AS u_name,
               u.phone    AS u_phone,
               op.id      AS op_id,
               op.open_id AS op_open_id,
               op.name    AS op_name,
               op.phone   AS op_phone
        FROM `order` o
                 LEFT JOIN user u ON o.user_id = u.id
                 LEFT JOIN operator op on o.operator_id = op.id
    </sql>

    <sql id="orderFinishedSelectBase">
        SELECT o.id,
               o.location,
               o.phone,
               o.begin_time,
               o.reservation_time,
               o.handle_time,
               o.end_time,
               o.description,
               o.user_description,
               o.repairment,
               o.status,
               u.id       AS u_id,
               u.open_id  AS u_open_id,
               u.name     AS u_name,
               u.phone    AS u_phone,
               op.id      AS op_id,
               op.open_id AS op_open_id,
               op.name    AS op_name,
               op.phone   AS op_phone
        FROM `order_finish` o
                 LEFT JOIN user u ON o.user_id = u.id
                 LEFT JOIN operator op on o.operator_id = op.id
    </sql>

    <sql id="allOrderSelectBase">
        SELECT id,
               location,
               phone,
               begin_time,
               reservation_time,
               handle_time,
               end_time,
               description,
               user_description,
               repairment,
               status,
               u_id,
               u_name,
               u_phone,
               op_id,
               op_name,
               op_phone
        FROM (
                 SELECT o1.id,
                        o1.location,
                        o1.phone,
                        o1.begin_time,
                        o1.reservation_time,
                        o1.handle_time,
                        o1.end_time,
                        o1.description,
                        o1.user_description,
                        o1.repairment,
                        o1.status,
                        u1.id     AS u_id,
                        u1.name   AS u_name,
                        u1.phone  AS u_phone,
                        op1.id    AS op_id,
                        op1.name  AS op_name,
                        op1.phone AS op_phone
                 FROM `order` AS o1
                          LEFT JOIN user u1 ON o1.user_id = u1.id
                          LEFT JOIN operator op1 on o1.operator_id = op1.id
                 UNION
                 SELECT o2.id,
                        o2.location,
                        o2.phone,
                        o2.begin_time,
                        o2.reservation_time,
                        o2.handle_time,
                        o2.end_time,
                        o2.description,
                        o2.user_description,
                        o2.repairment,
                        o2.status,
                        u2.id     AS u_id,
                        u2.name   AS u_name,
                        u2.phone  AS u_phone,
                        op2.id    AS op_id,
                        op2.name  AS op_name,
                        op2.phone AS op_phone
                 FROM order_finish AS o2
                          LEFT JOIN user u2 ON o2.user_id = u2.id
                          LEFT JOIN operator op2 on o2.operator_id = op2.id
             )
                 AS o
    </sql>

    <insert id="saveOrder">
        INSERT INTO `order` (user_id, repairment, phone, location, user_description, reservation_time)
        VALUES (#{id}, #{repairment}, #{phone}, #{location}, #{userDescription}, #{reservationTime})
    </insert>
    <insert id="saveFinishedOrder">
        INSERT INTO order_finish (id, user_id, operator_id, location, phone, begin_time, handle_time, user_description,
                                  description, repairment, status, reservation_time)
        VALUES (#{id}, #{userID}, #{operatorID}, #{location}, #{phone}, #{beginDate}, #{handleDate}, #{userDescription},
                #{description}, #{repairment}, #{status}, #{reservationDate})
    </insert>
    <insert id="addOrder">
        INSERT INTO `order` (user_id, location, phone, user_description, description, repairment, status)
        VALUES (#{userID}, #{location}, #{phone}, #{userDescription}, #{description}, #{repairment}, #{status})
    </insert>
    <update id="takeOrder">
        UPDATE `order`
        SET operator_id = #{operatorID},
            status      = #{status},
            handle_time = #{date}
        WHERE id = #{orderID}
    </update>
    <update id="updateOrder">
        UPDATE `order`
        SET description      = #{description},
            user_description = #{userDescription},
            location         = #{location},
            repairment       = #{repairment}
        WHERE id = #{id}
    </update>
    <update id="updateOrderByOperatorAndStatus">
        UPDATE `order`
        SET status = #{toStatus}
        WHERE operator_id = #{operatorID}
          AND status = #{fromStatus}
    </update>
    <update id="updateDescription">
        UPDATE `order`
        SET description = #{description}
        WHERE operator_id = #{operatorID}
          AND status = #{status}
    </update>
    <update id="updateOrderDescription">
        UPDATE `order`
        SET description = #{description}
        WHERE id = #{orderID}
    </update>
    <update id="updateFinishedOrder">
        UPDATE order_finish
        SET description      = #{description},
            user_description = #{userDescription},
            location         = #{location},
            repairment       = #{repairment}
        WHERE id = #{id}
    </update>
    <delete id="deleteOrderByID">
        DELETE
        FROM `order`
        WHERE id = #{id}
    </delete>
    <delete id="deleteOrderByUserID">
        DELETE
        FROM `order`
        WHERE user_id = #{id}
    </delete>
    <delete id="deleteOrderFinishedByUserID">
        DELETE
        FROM `order_finish`
        WHERE user_id = #{id}
    </delete>
    <select id="getOrderByUserID" resultMap="Order">
        <include refid="orderSelectBase"/>
        WHERE u.id = #{id}
    </select>
    <select id="getOrderByID" resultMap="Order">
        <include refid="orderSelectBase"/>
        WHERE o.id = #{id}
    </select>
    <select id="getOrderList" resultMap="Order">
        <include refid="orderSelectBase"/>
        <where>
            <if test="keyWord != '' and keyWord != null">
                o.location LIKE concat('%', #{keyWord}, '%') OR
                o.description LIKE concat('%', #{keyWord}, '%') OR
                o.user_description LIKE concat('%', #{keyWord}, '%') OR
                u.name LIKE concat('%', #{keyWord}, '%') OR
                op.name LIKE concat('%', #{keyWord}, '%')
            </if>
        </where>
        ORDER BY o.status ASC
    </select>
    <select id="getOrderFinishedList" resultMap="Order">
        <include refid="orderFinishedSelectBase"/>
        <where>
            <if test="keyWord != '' and keyWord != null">
                o.location LIKE concat('%', #{keyWord}, '%') OR
                o.description LIKE concat('%', #{keyWord}, '%') OR
                o.user_description LIKE concat('%', #{keyWord}, '%') OR
                u.name LIKE concat('%', #{keyWord}, '%') OR
                op.name LIKE concat('%', #{keyWord}, '%')
            </if>
        </where>
        ORDER BY begin_time DESC
    </select>
    <select id="getOrderNumberByStatus" resultType="int">
        SELECT COUNT(*)
        FROM `order`
        WHERE status = #{status}
    </select>
    <select id="getOrderNumberByDate" resultType="int">
        SELECT COUNT(*)
        from `order`
        where to_days(begin_time) = to_days(#{date});
    </select>
    <select id="getOrderFinishedNumberByDate" resultType="int">
        SELECT COUNT(*)
        from `order_finish`
        where to_days(begin_time) = to_days(#{date});
    </select>
    <select id="getOrderByNumber" resultMap="Order">
        <include refid="orderSelectBase"/>
        ORDER BY begin_time ASC LIMIT #{number}
    </select>
    <select id="getOrderFinishedByID" resultMap="Order">
        <include refid="orderFinishedSelectBase"/>
        WHERE o.id = #{id}
    </select>
    <select id="getOrderByOperatorIDAndStatus" resultMap="Order">
        <include refid="orderSelectBase"/>
        WHERE op.id = #{id} AND o.status = #{status}
    </select>
    <select id="getOrderListByOperatorID" resultMap="Order">
        <include refid="orderSelectBase"/>
        WHERE op.id = #{id}
        <if test="keyWord != '' and keyWord != null">
            AND
            o.location LIKE concat('%', #{keyWord}, '%') OR
            o.description LIKE concat('%', #{keyWord}, '%') OR
            o.user_description LIKE concat('%', #{keyWord}, '%') OR
            u.name LIKE concat('%', #{keyWord}, '%') OR
            op.name LIKE concat('%', #{keyWord}, '%')
        </if>
        ORDER BY o.status ASC
        LIMIT #{start}, #{pageSize}
    </select>
    <select id="getOrderFinishedListByOperatorID" resultMap="Order">
        <include refid="orderFinishedSelectBase"/>
        WHERE op.id = #{id}
        <if test="keyWord != '' and keyWord != null">
            AND
            o.location LIKE concat('%', #{keyWord}, '%') OR
            o.description LIKE concat('%', #{keyWord}, '%') OR
            o.user_description LIKE concat('%', #{keyWord}, '%') OR
            u.name LIKE concat('%', #{keyWord}, '%') OR
            op.name LIKE concat('%', #{keyWord}, '%')
        </if>
        ORDER BY o.status ASC
        LIMIT #{start}, #{pageSize}
    </select>
    <select id="getOrderNumberByOperatorID" resultType="int">
        SELECT COUNT(*)
        FROM `order`
        WHERE operator_id = #{id}
    </select>
    <select id="getOrderFinishedNumberByOperatorID" resultType="int">
        SELECT COUNT(*)
        FROM `order_finish`
        WHERE operator_id = #{id}
    </select>
    <select id="getAllOrderListByOperatorID" resultMap="Order">
        <include refid="allOrderSelectBase"/>
        WHERE op_id = #{operatorID}
        <if test="keyWord != '' and keyWord != null">
            AND
            o.location LIKE concat('%', #{keyWord}, '%') OR
            o.description LIKE concat('%', #{keyWord}, '%') OR
            o.user_description LIKE concat('%', #{keyWord}, '%') OR
            u.name LIKE concat('%', #{keyWord}, '%') OR
            op.name LIKE concat('%', #{keyWord}, '%')
        </if>
        ORDER BY status ASC
    </select>
    <select id="getTodayOrderList" resultMap="Order">
        <include refid="allOrderSelectBase"/>
        WHERE to_days(reservation_time) = to_days(now())
        <if test="keyWord != '' and keyWord != null">
            AND
            o.location LIKE concat('%', #{keyWord}, '%') OR
            o.description LIKE concat('%', #{keyWord}, '%') OR
            o.user_description LIKE concat('%', #{keyWord}, '%') OR
            u.name LIKE concat('%', #{keyWord}, '%') OR
            op.name LIKE concat('%', #{keyWord}, '%')
        </if>
        ORDER BY status ASC
    </select>
    <select id="getTodayOrderFinishedList" resultMap="Order">
        <include refid="allOrderSelectBase"/>
        WHERE to_days(handle_time) = to_days(now())
        OR to_days(end_time) = to_days(now())
        <if test="keyWord != '' and keyWord != null">
            AND
            o.location LIKE concat('%', #{keyWord}, '%') OR
            o.description LIKE concat('%', #{keyWord}, '%') OR
            o.user_description LIKE concat('%', #{keyWord}, '%') OR
            u.name LIKE concat('%', #{keyWord}, '%') OR
            op.name LIKE concat('%', #{keyWord}, '%')
        </if>
        ORDER BY status ASC
    </select>
    <select id="getOrderSolvingList" resultMap="Order">
        <include refid="allOrderSelectBase"/>
        WHERE status = 1
        <if test="keyWord != '' and keyWord != null">
            AND
            o.location LIKE concat('%', #{keyWord}, '%') OR
            o.description LIKE concat('%', #{keyWord}, '%') OR
            o.user_description LIKE concat('%', #{keyWord}, '%') OR
            u.name LIKE concat('%', #{keyWord}, '%') OR
            op.name LIKE concat('%', #{keyWord}, '%')
        </if>
        ORDER BY status ASC
    </select>
</mapper>